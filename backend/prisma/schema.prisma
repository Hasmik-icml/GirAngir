// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tokens      RefreshToken[]
  words       Vocabulary[]
  translation Translation[]
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Vocabulary {
  id               String        @id @default(uuid())
  content          String
  language         Language      @relation(fields: [languageId], references: [id])
  languageId       String
  user             User          @relation(fields: [userId], references: [id])
  userId           String
  translationsFrom Translation[] @relation("WordTranslationsFrom")
  translationsTo   Translation[] @relation("WordTranslationsTo")
  // @@map("Entry")

  @@unique([content, languageId, userId])
}

model Language {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  words Vocabulary[]
}

model Translation {
  id            String     @id @default(uuid())
  contentFrom   Vocabulary @relation("WordTranslationsFrom", fields: [contentFromId], references: [id])
  contentFromId String
  contentTo     Vocabulary @relation("WordTranslationsTo", fields: [contentToId], references: [id])
  contentToId   String
  user          User       @relation(fields: [userId], references: [id])
  userId        String
}
